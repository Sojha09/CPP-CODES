class Solution {
public:
    vector<int> bottomView(Node *root) {
        vector<int> ans;
        if (root == nullptr) return ans;
        map<int, int> bottomNode;
        queue<pair<Node*, int>> q;
        q.push({root, 0});
while (!q.empty()) {
            auto p = q.front();
            q.pop();

            Node* frontNode = p.first;
            int hd = p.second;
            bottomNode[hd] = frontNode->data;

            if (frontNode->left)
                q.push({frontNode->left, hd - 1});

            if (frontNode->right)
                q.push({frontNode->right, hd + 1});
        }

        for (auto it : bottomNode) {
            ans.push_back(it.second);
        }

        return ans;
    }
};
