class Solution {
public:

void dfs(vector<vector<int>>& image, int i, int j, int oldColor, int newColor, int rows, int cols) {

 if (i < 0 || j < 0 || i >= rows || j >= cols || image[i][j] != oldColor)
            return;
        image[i][j] = newColor;

        
        dfs(image, i + 1, j, oldColor, newColor, rows, cols); 
        dfs(image, i - 1, j, oldColor, newColor, rows, cols); 
        dfs(image, i, j + 1, oldColor, newColor, rows, cols); 
        dfs(image, i, j - 1, oldColor, newColor, rows, cols); 
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int rows = image.size();
        int cols = image[0].size();
        int oldColor = image[sr][sc];

        if (oldColor == color)  
            return image;
        
        vector<vector<int>>ans=image;
        dfs(ans, sr, sc, oldColor, color, rows, cols);
        return ans;
    }
};
